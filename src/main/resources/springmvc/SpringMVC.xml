<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
         http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 开启spring注解  controller层 -->
    <context:component-scan base-package="ssm.controller"></context:component-scan>

    <!-- 开启springmvc特有的注解   开启注解:@RequestMapping  @RequestParam等  -->
    <mvc:annotation-driven>
        <mvc:message-converters><!--response.getWriter().Write() ——> @responsebody -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg
                        value="UTF-8"/><!--response.setContentType("text/html;charset=UTF-8") ——> response解决@responsebody响应中文乱码-->
            </bean>

            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。-->
    <mvc:default-servlet-handler/>


    <!-- 视图解析器  location表示路径地址 -->


    <!--静态资源-->
    <!-- <mvc:resources mapping="/css/**" location="/css/"/>
     <mvc:resources mapping="/js/**" location="/js/"/>
     <mvc:resources mapping="/jsp/**" location="/jsp/"/>
     <mvc:resources mapping="/html/**" location="/html/"/>-->


    <!-- 处理jsp页面所在的前缀和后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀,确定当前访问的页面路径地址 -->
        <property name="prefix">
            <value>/WEB-INF/jsp/</value><!-- 放在WEB-INF文件夹之下的page文件夹 -->
        </property>
        <!-- 后缀,确定要访问的文件类型 -->
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>
</beans>